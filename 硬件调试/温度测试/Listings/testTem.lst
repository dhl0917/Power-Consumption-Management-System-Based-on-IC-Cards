C51 COMPILER V9.56.0.0   TESTTEM                                                           04/28/2017 08:40:07 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE TESTTEM
OBJECT MODULE PLACED IN .\Objects\testTem.obj
COMPILER INVOKED BY: F:\keil\C51\BIN\C51.EXE testTem.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\test
                    -Tem.lst) TABS(2) OBJECT(.\Objects\testTem.obj)

line level    source

   1            #include<reg51.h>
   2            #include<stdio.h>
   3            #include<intrins.h>
   4            #include<absacc.h>
   5          
   6            typedef unsigned char uchar;
   7            extern serial_initial();
   8            sbit TMDAT=P3^7;
   9          
  10            void dmsec(unsigned int count);
  11            void tmreset(void);
  12            void tmstart(void);
  13            unsigned char tmrtemp(void);
  14          
  15            #define SEGMENT XBYTE[0xBFFF]
  16            #define BIT_LED XBYTE[0X7FFF]
  17            unsigned char code seg_code[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x67,0x77,0x7c,0x39,0x5e,0x7
             -9,0x71,0x00};
  18          
  19            void main(void)
  20            {
  21   1        unsigned char last;
  22   1        int last_shi,last_ge;
  23   1        serial_initial();
  24   1        while(1){
  25   2       
  26   2        tmstart();
  27   2        dmsec(10);
  28   2        last=tmrtemp();
  29   2        printf("the current temperature:%bd\n",last);
  30   2        last_shi=last/10;
  31   2        last_ge=last%10;
  32   2        BIT_LED=0x02;
  33   2        SEGMENT=seg_code[last_shi];
  34   2        dmsec(1);
  35   2        BIT_LED=0x01;
  36   2        SEGMENT=seg_code[last_ge];
  37   2        dmsec(1);
  38   2        }
  39   1        }
  40            
  41            void dmsec(unsigned int count)
  42            {
  43   1          unsigned int i;
  44   1          while(count--)
  45   1          {
  46   2            for(i=0;i<125;i++){}
  47   2          }
  48   1        }
  49            
  50            void tmrest(void)
  51            {
  52   1          unsigned int i;
  53   1          TMDAT=0;
C51 COMPILER V9.56.0.0   TESTTEM                                                           04/28/2017 08:40:07 PAGE 2   

  54   1          i=103;
  55   1          while(i>0)i--;
  56   1          TMDAT=1;
  57   1          i=4;
  58   1          while(i>0)i--;
  59   1        }
  60          
  61            void tmpre(void)
  62            {
  63   1          unsigned int i;
  64   1          while(TMDAT);
  65   1          while(~TMDAT);
  66   1          i=4;
  67   1          while(i>0)i--;
  68   1        }
  69          
  70            bit tmrbit(void)
  71            {
  72   1        unsigned int i;
  73   1        bit dat;
  74   1        TMDAT=0;i++;
  75   1        TMDAT=1;i++;i++;
  76   1        dat=TMDAT;
  77   1        i=8;
  78   1        while(i>0)i--;
  79   1        return(dat);
  80   1        }
  81          
  82            unsigned char tmrbyte(void)
  83            {
  84   1        unsigned char i,j,dat;
  85   1        dat=0;
  86   1        for(i=1;i<=8;i++)
  87   1        {
  88   2        j=tmrbit();
  89   2        dat=(j<<7)|(dat>>1);
  90   2        }
  91   1        return (dat);
  92   1        }
  93            void tmwbyte(unsigned char dat)
  94            {
  95   1        unsigned int i;
  96   1        unsigned char j;
  97   1        bit testb;
  98   1        for(j=1;j<=8;j++)
  99   1        {
 100   2        testb=dat&0x01;
 101   2        dat=dat>>1;
 102   2        if(testb)
 103   2        { 
 104   3        TMDAT=0;
 105   3        i++;i++;
 106   3        TMDAT=1;
 107   3        i=8;
 108   3        while(i>0)i--;
 109   3        }
 110   2        else
 111   2        {
 112   3        TMDAT=0;
 113   3        i=8;
 114   3        while(i>0)i--;
 115   3        TMDAT=1;
C51 COMPILER V9.56.0.0   TESTTEM                                                           04/28/2017 08:40:07 PAGE 3   

 116   3        i++;i++;
 117   3        }
 118   2        }
 119   1        }
 120          
 121          
 122          
 123          
 124          
 125            void tmstart(void)
 126            {
 127   1        tmrest();
 128   1        tmpre();
 129   1        dmsec(1);
 130   1        tmwbyte(0xcc);
 131   1        tmwbyte(0x44);
 132   1        }
 133          
 134            unsigned char tmrtemp()
 135            {
 136   1        unsigned char a,b,y1,y2,y3;
 137   1        tmrest();
 138   1        tmpre();
 139   1        dmsec(1);
 140   1        tmwbyte(0xcc);
 141   1        tmwbyte(0xbe);
 142   1        a=tmrbyte();
 143   1        b=tmrbyte();
 144   1        y1=a>>4;
 145   1        y2=b<<4;
 146   1        y3=y1|y2;
 147   1        return(y3);
 148   1        }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    384    ----
   CONSTANT SIZE    =     46    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
